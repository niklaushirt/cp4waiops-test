
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Patches
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: TIMESTAMP -              ðŸŸ¢ START - PATCH TOPOLOGY
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: ROUTES -                 ðŸ“¥ WRITE TO LOGFILE
  shell: |
    export MESSAGE="Patching Topology Deployment"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../installAIManager.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../installAIManager.log
  ignore_errors: yes


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Ingress
# --------------------------------------------------------------------------------------------------------------------------------------
- name: ROUTES -                 ðŸ©¹ Patch Ingress policy-group
  shell: oc patch namespace default --type=json -p '[{"op":"add","path":"/metadata/labels","value":{"network.openshift.io/policy-group":"ingress"}}]'
  register: ingress_patched


# - name: HACK    -             ðŸ©¹ Patch AIOpsAnalyticsOrchestrator Pull Secret
#   shell: oc patch AIOpsAnalyticsOrchestrator aiops -n {{ WAIOPS_NAMESPACE }} --type merge  --patch-file ./templates/waiops/patches/analytics-pull-patch.yaml
#   ignore_errors: yes
#   register: irorchestrator_patched




# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Cassandra Pod
# --------------------------------------------------------------------------------------------------------------------------------------
- name: HACK    -             ðŸ•¦ Wait for Cassandra Pod to become available - this can take up to 45 minutes (hack for v3.4.0)
  shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-topology-cassandra-0| grep 1/1| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# # --------------------------------------------------------------------------------------------------------------------------------------
# # Patch Service Account
# # --------------------------------------------------------------------------------------------------------------------------------------
# - name: HACK    -             ðŸ©¹ Patch aiops-topology-service-account (hack for v3.4.0)
#   shell: |
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#   ignore_errors: yes


  

# --------------------------------------------------------------------------------------------------------------------------------------
# Wait for Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: HACK    -             ðŸ•¦ Wait for Topology Pods to become available - this can take up to 45 minutes (hack for v3.4.0)
  shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-topology-merge| grep -c ""
  register: kubectl_get_pods
  until: kubectl_get_pods.stdout == "1"
  retries: 500
  delay: 15


# --------------------------------------------------------------------------------------------------------------------------------------
# Patch Topology Pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: HACK    -             ðŸ©¹ Patch aiops-topology-merge (hack for v3.4.0)
  shell: oc patch deployment aiops-topology-merge -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-merge-patch.yaml
  ignore_errors: yes


- name: HACK    -             ðŸ©¹ Patch aiops-topology-search (hack for v3.4.0)
  shell: oc patch deployment aiops-topology-search -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-search-patch.yaml
  ignore_errors: yes


- name: HACK    -             ðŸ©¹ Patch aiops-topology-status (hack for v3.4.0)
  shell: oc patch deployment aiops-topology-status -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-status-patch.yaml
  ignore_errors: yes


- name: HACK    -             ðŸ©¹ Patch aiops-topology-layout (hack for v3.4.0)
  shell: oc patch deployment aiops-topology-layout -n {{ WAIOPS_NAMESPACE }} --patch-file ./templates/waiops/patches/aiops-topology-layout-patch.yaml
  ignore_errors: yes


# # --------------------------------------------------------------------------------------------------------------------------------------
# # Wait for IR Analytics Pods
# # --------------------------------------------------------------------------------------------------------------------------------------
# - name: HACK    -             ðŸ•¦ Wait for IR Analytics Pods to become available - this can take up to 45 minutes (hack for v3.4.0)
#   shell: oc get po -n {{ WAIOPS_NAMESPACE }} | grep aiops-ir-analytics-|grep -c ""
#   register: kubectl_get_pods
#   until: kubectl_get_pods.stdout > "4"
#   retries: 500
#   delay: 15


# # --------------------------------------------------------------------------------------------------------------------------------------
# # Patch IR Analytics Pods
# # --------------------------------------------------------------------------------------------------------------------------------------
# - name: HACK    -             ðŸ©¹ Patch IR Analytics Pods (hack for v3.4.0) (you can ignore errors in this step)
#   shell: |
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-topology-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-worker -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-pipeline-composer -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-spark-master -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-probablecause -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-analytics-classifier -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc patch -n {{ WAIOPS_NAMESPACE }} serviceaccount aiops-ir-lifecycle-eventprocessor-ep -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
#     oc delete pod $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ WAIOPS_NAMESPACE }}
#   ignore_errors: yes


# --------------------------------------------------------------------------------------------------------------------------------------
# Delete ImgPull error pods
# --------------------------------------------------------------------------------------------------------------------------------------
- name: ROUTES -                 ðŸ©¹ Delete Pods with ImgPull Error  (you can ignore errors in this step)
  shell: |
        errorPods=$(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}')
        if [[ ! $errorPods == "" ]]; then
          echo "Refreshing Pods"
          oc delete pod --ignore-not-found $(oc get po -n {{ WAIOPS_NAMESPACE }}|grep ImagePull|awk '{print$1}') -n {{ WAIOPS_NAMESPACE }}>/dev/null 2>/dev/null
        fi


  ignore_errors: yes
